Étapes :

1. Type checking  [typing.ml]
  [+] quelques erreurs de typage simples sont levées, e.g. concernant les constantes

2. Simplification de l'AST  [simplify.ml]
  [+] les calculs sont distribués quand ça permet de réduire le nombre d'opérations
  [+] les opérateurs unaires et binaires se simplifient dès que possible
  [+] les opérations entre constantes sont évaluées
  [+] les blocs sont regroupés et/ou ignorés lorsqu'ils ne sont jamais atteints (ex: if false)
  [+] l'AST est printable
  Un script sur lequel tester les simplifications possibles est fourni : test_simplify.py

3. RTL [rtl.ml]

Pour la suite :

Faute de temps (nous sommes des élèves du PA MAP avec beaucoup d'autres partiels à préparer),
nous nous sommes (très fortement) basés sur le code github.com/AmaurX/INF564 de mini-c 
pour la structure globale des fichiers et les algorithmes mis en œuvre (analyse du temps de vie
et coloration du graphe). Nous espérons que cela ne nous portera pas trop préjudice...

4. ERTL [ertl.ml]

5. LTL [ltl.ml]

6. Linéarisation [lin.ml]